// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2p.proto

/*
Package protocols_p2p is a generated protocol buffer package.

It is generated from these files:
	p2p.proto

It has these top-level messages:
	NoteData
	Message
*/
package protocols_p2p

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NoteData struct {
	ClientVersion string `protobuf:"bytes,1,opt,name=clientVersion" json:"clientVersion,omitempty"`
	Revision      uint32 `protobuf:"varint,2,opt,name=revision" json:"revision,omitempty"`
	Note          uint32 `protobuf:"varint,3,opt,name=note" json:"note,omitempty"`
	Mute          bool   `protobuf:"varint,4,opt,name=mute" json:"mute,omitempty"`
	NodeId        string `protobuf:"bytes,5,opt,name=nodeId" json:"nodeId,omitempty"`
	Address       string `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
	NodePubKey    []byte `protobuf:"bytes,7,opt,name=nodePubKey,proto3" json:"nodePubKey,omitempty"`
	Sign          []byte `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *NoteData) Reset()                    { *m = NoteData{} }
func (m *NoteData) String() string            { return proto.CompactTextString(m) }
func (*NoteData) ProtoMessage()               {}
func (*NoteData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NoteData) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *NoteData) GetRevision() uint32 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *NoteData) GetNote() uint32 {
	if m != nil {
		return m.Note
	}
	return 0
}

func (m *NoteData) GetMute() bool {
	if m != nil {
		return m.Mute
	}
	return false
}

func (m *NoteData) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NoteData) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NoteData) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *NoteData) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// a notification is any number of NoteData and DeathNotice messages
type Message struct {
	Notes []*NoteData `protobuf:"bytes,1,rep,name=notes" json:"notes,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Message) GetNotes() []*NoteData {
	if m != nil {
		return m.Notes
	}
	return nil
}

func init() {
	proto.RegisterType((*NoteData)(nil), "protocols.p2p.NoteData")
	proto.RegisterType((*Message)(nil), "protocols.p2p.Message")
}

func init() { proto.RegisterFile("p2p.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x31, 0x4b, 0x03, 0x41,
	0x10, 0x85, 0x59, 0x93, 0xdc, 0x5d, 0x46, 0xaf, 0x99, 0x42, 0x07, 0x0b, 0x59, 0x82, 0xc5, 0x36,
	0x5e, 0x71, 0x36, 0xfe, 0x00, 0x1b, 0x11, 0x45, 0xb6, 0xb0, 0xbf, 0xe4, 0x86, 0x70, 0x10, 0x77,
	0x97, 0x9b, 0x8d, 0xe0, 0x5f, 0xf5, 0xd7, 0xc8, 0x8d, 0x46, 0x92, 0x6a, 0xdf, 0xfb, 0xde, 0x83,
	0x59, 0x1e, 0x2c, 0x53, 0x9b, 0x9a, 0x34, 0xc6, 0x1c, 0xb1, 0xd6, 0x67, 0x13, 0x77, 0xd2, 0xa4,
	0x36, 0xad, 0xbe, 0x0d, 0x54, 0xaf, 0x31, 0xf3, 0x63, 0x97, 0x3b, 0xbc, 0x85, 0x7a, 0xb3, 0x1b,
	0x38, 0xe4, 0x77, 0x1e, 0x65, 0x88, 0x81, 0x8c, 0x35, 0x6e, 0xe9, 0x4f, 0x21, 0x5e, 0x43, 0x35,
	0xf2, 0xe7, 0xa0, 0x85, 0x33, 0x6b, 0x5c, 0xed, 0xff, 0x3d, 0x22, 0xcc, 0x43, 0xcc, 0x4c, 0x33,
	0xe5, 0xaa, 0x27, 0xf6, 0xb1, 0xcf, 0x4c, 0x73, 0x6b, 0x5c, 0xe5, 0x55, 0xe3, 0x25, 0x14, 0x21,
	0xf6, 0xfc, 0xd4, 0xd3, 0x42, 0x4f, 0xfc, 0x39, 0x24, 0x28, 0xbb, 0xbe, 0x1f, 0x59, 0x84, 0x0a,
	0x0d, 0x0e, 0x16, 0x6f, 0x00, 0xa6, 0xce, 0xdb, 0x7e, 0xfd, 0xcc, 0x5f, 0x54, 0x5a, 0xe3, 0x2e,
	0xfc, 0x11, 0x99, 0xae, 0xc8, 0xb0, 0x0d, 0x54, 0x69, 0xa2, 0x7a, 0xf5, 0x00, 0xe5, 0x0b, 0x8b,
	0x74, 0x5b, 0xc6, 0x3b, 0x58, 0x4c, 0x9f, 0x11, 0x32, 0x76, 0xe6, 0xce, 0xdb, 0xab, 0xe6, 0x64,
	0x86, 0xe6, 0x30, 0x81, 0xff, 0x6d, 0xad, 0x0b, 0x8d, 0xef, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xb0, 0x98, 0x09, 0x51, 0x39, 0x01, 0x00, 0x00,
}
